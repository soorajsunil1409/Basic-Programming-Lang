expr            :   DOLLAR IDENTIFIER (EQ|MULE|PLUSE|DIVE|MINUSE) expr
                :   comp-expr ((KEYWORD:AND|KEYWORD:OR) comp-expr)*

comp-expr       :   NOT comp-expr
                :   arith-expr ((EE|NE|GT|LT|LTE|GTE) artih-expr)*
        
arith-expr      :   term ((PLUS|MINUS) term)*

term            :   factor ((PLUS|MINUS) factor)*

factor          :   (PLUS|MINUS) power

power           :   call (POW, factor)*

call            :   atom (LPAREN (COMMA expr)*)? RPAREN)?

atom            :   FLOAT|INT|STRING|IDENTIFIER
                :   LPAREN expr RPAREN
                :   if-expr
                :   for-expr
                :   while-expr
                :   func-def
                :   list-expr

list-expr       :   LSQUARE (expr (COMMA expr)*)? RSQUARE

if-expr         :   KEYWORD:IF expr ARROW expr
                    (KEYWORD:ELIF expr ARROW expr)*
                    (KEYWORD:ELSE ARROW)?

for-expr        :   KEYWORD:FOR IDENTIFIER LPAREN expr COMMA expr (COMMA expr)? RPAREN PIPE expr PIPE
                :   for i(1, 6, 1) | var res = res + 1 |

while-expr      :   KEYWORD:WHILE expr ARROW expr
                :   while TRUE | var res = res + 2 |

func-def       :   KEYWORD:FUNC IDENTIFIER?
                   LPAREN (KEYWORD:IDENTIFIER (COMMA KEYWORD:IDENTIFIER)*)? RPAREN 
                   ARROW expr